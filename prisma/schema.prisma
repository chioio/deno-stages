// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = []
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  first_name String
  last_name  String
  email      String  @unique
  username   String  @unique
  password   String
  hashed_rt  String? @unique

  user_image UserImage?
  readme     Readme?

  creations Creation[]
  comments  Comment[]
  pins      Pin[]
  stars     Star[]

  followers Follow[] @relation("follower")
  followees Follow[] @relation("followee")

  @@map("users")
}

model UserImage {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  user_id String @unique @db.ObjectId
  avatar  String
  banner  String

  owner User? @relation(fields: [user_id], references: [id])

  @@map("user_images")
}

model Readme {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  user_id String @unique @db.ObjectId
  content String

  owner User? @relation(fields: [user_id], references: [id])

  @@map("readmes")
}

model Follow {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  follower_id String @unique @db.ObjectId
  followee_id String @unique @db.ObjectId

  follower User? @relation("follower", fields: [follower_id], references: [id])
  followee User? @relation("followee", fields: [followee_id], references: [id])

  @@map("follows")
}

model Creation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  owner_id  String @unique @db.ObjectId
  title     String
  code_html String
  code_css  String
  code_js   String

  owner    User?     @relation(fields: [owner_id], references: [id])
  comments Comment[]
  pins     Pin[]
  stars    Star[]

  @@map("creations")
}

model Comment {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  owner_id    String @unique @db.ObjectId
  creation_id String @unique @db.ObjectId
  title       String
  content     String

  owner    User?     @relation(fields: [owner_id], references: [id])
  creation Creation? @relation(fields: [creation_id], references: [id])

  @@map("comments")
}

model Star {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  owner_id    String @unique @db.ObjectId
  creation_id String @unique @db.ObjectId

  owner    User?     @relation(fields: [owner_id], references: [id])
  creation Creation? @relation(fields: [creation_id], references: [id])

  @@map("stars")
}

model Pin {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  owner_id     String @unique @db.ObjectId
  creation_id String @unique @db.ObjectId

  owner    User?     @relation(fields: [owner_id], references: [id])
  creation Creation? @relation(fields: [creation_id], references: [id])

  @@map("pins")
}
